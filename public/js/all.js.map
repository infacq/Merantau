{"version":3,"sources":["app.js"],"names":[],"mappingsfile":"all.js","sourcesContent":["angular.module('getLostApp', ['ngMaterial']).\r\ncontroller('MainCtrl', function($rootScope, $scope, $mdToast, $animate, $http, $timeout, $q, $log) {\r\n  'use strict';\r\n  // Initialize the scope variables\r\n  $scope.info = {\r\n    origin: {},\r\n    maxfare: {},\r\n    returndate: new Date(),\r\n    departuredate: new Date()\r\n  };\r\n\r\n  $scope.prices = [{\r\n    show: '$200',\r\n    value: 200\r\n  }, {\r\n    show: '$300',\r\n    value: 300\r\n  }, {\r\n    show: '$400',\r\n    value: 400\r\n  }, {\r\n    show: '$500',\r\n    value: 500\r\n  }, {\r\n    show: '$600',\r\n    value: 600\r\n  }, {\r\n    show: '$700',\r\n    value: 700\r\n  }, {\r\n    show: '$800',\r\n    value: 800\r\n  }, {\r\n    show: '$900',\r\n    value: 900\r\n  }, {\r\n    show: '$1000',\r\n    value: 1000\r\n  }, {\r\n    show: '$1100',\r\n    value: 1100\r\n  }, {\r\n    show: '$1200',\r\n    value: 1200\r\n  }, {\r\n    show: '$1300',\r\n    value: 1300\r\n  }, {\r\n    show: '$1400',\r\n    value: 1400\r\n  }, {\r\n    show: '$1500',\r\n    value: 1500\r\n  }];\r\n\r\n  // The main function that submits the data\r\n  $scope.submit = function() {\r\n    $scope.error = null;\r\n    $scope.fareinfo = null;\r\n\r\n    $http.get('/api/v1/places?origin=' + $scope.ctrl.selectedItem.value +\r\n        '&departuredate=' + formatDate($scope.info.departuredate) +\r\n        '&returndate=' + formatDate($scope.info.returndate) +\r\n        '&maxfare=' + $scope.info.maxfare)\r\n      .success(function(data) {\r\n        $scope.results = data;\r\n        $scope.data = data.info;\r\n\r\n        if ($scope.results.status) {\r\n          $scope.fareinfo = JSON.parse($scope.data).FareInfo;\r\n          console.log($scope.fareinfo);\r\n          $scope.showSimpleToast('Successfully got flight info');\r\n        } else {\r\n          $scope.showSimpleToast('Error: ' +\r\n            JSON.parse($scope.data.data).message +\r\n            '. Try again!');\r\n        }\r\n      })\r\n      .error(function(err) {\r\n        $scope.showSimpleToast('Error: ' +\r\n          JSON.parse(err.data).message +\r\n          '. Try again!');\r\n      });\r\n  };\r\n\r\n  var self = this;\r\n  self.states = [];\r\n\r\n  (function getCityInformation() {\r\n    var cities = [];\r\n    $http.get('/api/v1/cities').success(function(data) {\r\n      cities = (JSON.parse(data.info)).Cities || [];\r\n      self.states = cities.map(function(state) {\r\n        return {\r\n          value: state.code,\r\n          display: state.code + '-' + state.countryName\r\n        };\r\n      });\r\n    }).error(function(err) {\r\n      $scope.showSimpleToast('Error: ' +\r\n        JSON.stringify(err) +\r\n        '. Try again!');\r\n    });\r\n  })();\r\n\r\n  self.querySearch = function(query) {\r\n    var results = query ?\r\n      self.states.filter(createFilterFor(query)) :\r\n      self.states;\r\n\r\n    return results;\r\n  };\r\n\r\n  function createFilterFor(query) {\r\n    var lowercaseQuery = angular.lowercase(query);\r\n    return function filterFn(state) {\r\n      return ((angular.lowercase(state.value)).indexOf(lowercaseQuery) === 0);\r\n    };\r\n  }\r\n\r\n  // Helper function to format the date\r\n  function formatDate(date) {\r\n    var d = new Date(date),\r\n      month = '' + (d.getMonth() + 1),\r\n      day = '' + d.getDate(),\r\n      year = d.getFullYear();\r\n\r\n    if (month.length < 2) {\r\n      month = '0' + month;\r\n    }\r\n    if (day.length < 2) {\r\n      day = '0' + day;\r\n    }\r\n\r\n    return [year, month, day].join('-');\r\n  }\r\n\r\n  // Helper functions to show the toast message on success or error\r\n  (function toastHelper() {\r\n    $scope.toastPosition = {\r\n      bottom: false,\r\n      top: true,\r\n      left: false,\r\n      right: true,\r\n      fit: true\r\n    };\r\n\r\n    $scope.getToastPosition = function() {\r\n      return Object.keys($scope.toastPosition)\r\n        .filter(function(pos) {\r\n          return $scope.toastPosition[pos];\r\n        })\r\n        .join(' ');\r\n    };\r\n\r\n    $scope.showSimpleToast = function(msg) {\r\n      $mdToast.show(\r\n        $mdToast.simple()\r\n        .content(msg)\r\n        .position($scope.getToastPosition())\r\n        .hideDelay(3000)\r\n      );\r\n    };\r\n  })();\r\n\r\n});"],"sourceRoot":"/source/"}